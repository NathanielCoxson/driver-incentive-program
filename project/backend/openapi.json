{
  "openapi": "3.0.3",
  "info": {
    "title": "Driver Incentive Program API",
    "description": "This is the api for our driver incentive program web application.",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://34.225.199.196/api"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "sponsors",
      "description": "Operations about sponsors"
    },
    {
      "name": "applications",
      "description": "Operations about applications"
    },
    {
      "name": "about",
      "description": "Operations for releases"
    },
    {
      "name": "catalogs",
      "description": "Operations about catalogs"
    },
    {
      "name": "orders",
      "description": "Operations about orders"
    },
    {
      "name": "reports",
      "description": "Operations about reports"
    }
  ],
  "paths": {
    "/about": {
      "get": {
        "tags": [
          "about"
        ],
        "summary": "Returns latest release",
        "description": "Returns an object with the lastest release information.",
        "operationId": "getLatestRelease",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "RID": {
                      "type": "string",
                      "example": "AF766CDD-37D3-4D0B-95FE-E629CE8B30AE"
                    },
                    "TeamNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "VersionNumber": {
                      "type": "integer",
                      "example": 5
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "example": "2023-10-11T20:42:32.237Z"
                    },
                    "ProductName": {
                      "type": "string",
                      "example": "Team01 Good Driver Incentive Program"
                    },
                    "ProductDescription": {
                      "type": "string",
                      "example": "Team01: FIFO Good Driver Incentive Program for Sprint 5"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "Creates a new user",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "query",
            "name": "AdminPin",
            "schema": {
              "type": "string",
              "example": 1234
            },
            "description": "Required if role is admin"
          },
          {
            "in": "query",
            "name": "SponsorName",
            "schema": {
              "type": "string",
              "example": "Sponsor"
            },
            "description": "Name of user sponsor, defaults to no sponsor"
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "Password": {
                        "type": "string",
                        "example": "1234"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created user"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "409": {
            "description": "Conflict with existing user"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users" 
        ],
        "summary": "Login the given user.",
        "description": "Attempts to login the provided user and returns the user from the database if successful.",
        "operationId": "getUserByUsername",
        "requestBody": {
          "description": "Username and password of the user.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Username": {
                    "type": "string",
                    "example": "JohnDoe"
                  },
                  "Password": {
                    "type": "string",
                    "example": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "UID": {
                      "type": "string",
                      "example": "64C4FE0F-AC6D-4144-B2A2-5BBDBF6196B5"
                    },
                    "SID": {
                      "type": "string",
                      "example": "63C8C6E2-3F73-4EE9-9819-31EF1FD12C7A"
                    },
                    "Name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "Role": {
                      "type": "string",
                      "example": "driver"
                    },
                    "Username": {
                      "type": "string",
                      "example": "JohnDoe"
                    },
                    "Password": {
                      "type": "string",
                      "example": "$2b$12$pr4ZaLC9G4saJ9PE23KbDOaqlUyWXwyf.fwWIE6slXV7mPOVt7JEW"
                    },
                    "Email": {
                      "type": "string",
                      "example": "testDriver@example.com"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiI2M0M4QzZFMi0zRjczLTRFRTktOTgxOS0zMUVGMUZEMTJDN0EiLCJTSUQiOiJENEYxRTM4OC0zRDMwLTQzREUtQjI5RS03RDQ3REQ4RjU2MDYiLCJOYW1lIjoiTmF0aGFuIENveHNvbiIsIlJvbGUiOiJhZG1pbiIsIlVzZXJuYW1lIjoibmNveHNvbiIsIlBhc3N3b3JkIjoiJDJiJDEyJGhvOS9veVVWUDJpNzl4TDk4d05yRWU1Zi5XbHRqc0IvZjZsQnI0RmJDR2RNZG5zeHBKTHIuIiwiRW1haWwiOiJuY294c29uQGNsZW1zb24uZWR1IiwiUGFzc3dvcmRSZXNldFRva2VuIjpudWxsLCJQYXNzd29yZFJlc2V0RXhwaXJhdGlvbiI6bnVsbCwiUmVmcmVzaFRva2VuIjoiNEZEMTU5NjItN0MwQy00QjkwLUExN0MtMzU2RjkyMTg4QTNGIiwiUmVmcmVzaFRva2VuRXhwaXJhdGlvbiI6IjIwMjMtMTAtMTdUMDE6MzQ6MjIuODM3WiIsImlhdCI6MTY5NzUwMjg5MCwiZXhwIjoxNjk3NTAzMTkwfQ.Ke6d45BxtDkUMAj8z5v6W5lwQHMjj5Ot1yADg5RHels"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "users/logout": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Log a user out",
        "description": "Clear's a user's refresh token from cookies and from the database to log them out.",
        "operationId": "clearRefreshToken",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "users/refresh": {
      "get": {
        "tags": [
          "users" 
        ],
        "summary": "Refreshes a user's access token.",
        "description": "Validates the refreshToken cookie sent in the request and will issue a new accessToken if it is valid and also store a new refresh token",
        "operationId": "saveRefreshToken",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiI2M0M4QzZFMi0zRjczLTRFRTktOTgxOS0zMUVGMUZEMTJDN0EiLCJTSUQiOiJENEYxRTM4OC0zRDMwLTQzREUtQjI5RS03RDQ3REQ4RjU2MDYiLCJOYW1lIjoiTmF0aGFuIENveHNvbiIsIlJvbGUiOiJhZG1pbiIsIlVzZXJuYW1lIjoibmNveHNvbiIsIlBhc3N3b3JkIjoiJDJiJDEyJGhvOS9veVVWUDJpNzl4TDk4d05yRWU1Zi5XbHRqc0IvZjZsQnI0RmJDR2RNZG5zeHBKTHIuIiwiRW1haWwiOiJuY294c29uQGNsZW1zb24uZWR1IiwiUGFzc3dvcmRSZXNldFRva2VuIjpudWxsLCJQYXNzd29yZFJlc2V0RXhwaXJhdGlvbiI6bnVsbCwiUmVmcmVzaFRva2VuIjoiNEZEMTU5NjItN0MwQy00QjkwLUExN0MtMzU2RjkyMTg4QTNGIiwiUmVmcmVzaFRva2VuRXhwaXJhdGlvbiI6IjIwMjMtMTAtMTdUMDE6MzQ6MjIuODM3WiIsImlhdCI6MTY5NzUwMjg5MCwiZXhwIjoxNjk3NTAzMTkwfQ.Ke6d45BxtDkUMAj8z5v6W5lwQHMjj5Ot1yADg5RHels"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{Username}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve user by username",
        "description": "Retrieves the user with the given username",
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "in": "path",
            "name": "Username",
            "schema": {
              "type": "string"
            },
            "description": "Username of the user to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "UID": {
                          "type": "string",
                          "example": "63C8C6E2-3F73-4EE9-9819-31EF1FD12C7A"
                        },
                        "Password": {
                          "type": "string",
                          "example": "$2b$12$QP.cE.OAgiLcg7vUV4N3/ONunj7euIZTyRdcMsVOTLr6DkP7xbxT6"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user password",
        "description": "Accepts request to reset a user's password. If email is send in request body, an email is sent to the user with a reset link. If valid token and new password are sent, the user's password is updated in the database.",
        "operationId": "resetUserPassword",
        "requestBody": {
          "description": "Reset password request",
          "content": {
            "Request Email": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "example": "email@example.com"
                  }
                }
              }
            },
            "Update Password": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "example": "email@example.com"
                  },
                  "Password": {
                    "type": "string",
                    "exmaple": "1234"
                  },
                  "Token": {
                    "type": "string",
                    "example": "1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted request, awaiting update."
          },
          "204": {
            "description": "Successfullly updated password."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden request"
          },
          "404": {
            "description": "User or password reset request not found in database."
          }
        }
      }
    },
    "/sponsors/": {
      "get": {
        "tags": [
          "sponsors"
        ],
        "summary": "Retrieve all sponsors",
        "description": "Retrieves a list of all sponsors.",
        "operationId": "getSponsors",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sponsors": {
                      "type": "array",
                      "example": [
                        {
                          "SID": "63C8C6E2-3F73-4EE9-9819-31EF1FD12C7A",
                          "SponsorName": "Sponsor Org."
                        },
                        {
                          "SID": "EEC8ED37-F3C0-4537-AC20-42CF9E1FD340",
                          "SponsorName": "Test Sponsor"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sponsors not found."
          }
        }
      },
      "post": {
        "tags": [
          "sponsors"
        ],
        "summary": "Create a new sponsor",
        "description": "Creates a new sponsor with the name provided.",
        "operationId": "createSponsor",
        "requestBody": {
          "description": "The name of the sponsor organization.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SponsorName": {
                    "type": "string",
                    "example": "Sponsor Org."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "409": {
            "description": "Name unavailable"
          }
        }
      }
    },
    "/sponsors/{SponsorName}": {
      "get": {
        "tags": [
          "sponsors"
        ],
        "summary": "Retrieve sponsor",
        "description": "Retrieves sponsor with SponsorName",
        "operationId": "getSponsorByName",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Sponsor"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "SID": {
                          "type": "string",
                          "example": "63C8C6E2-3F73-4EE9-9819-31EF1FD12C7A"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Missing sponsor name."
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      },
      "delete": {
        "tags": [
          "sponsors"
        ],
        "summary": "Remove a sponsor",
        "description": "Removes a sponsor organization from the database.",
        "operationId": "deleteSponsor",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor to retrieve",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      },
      "put": {
        "tags": [
          "sponsors"
        ],
        "summary": "Update a sponsor",
        "description": "Update a sponsor organization's information.",
        "operationId": "updateSponsor",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor to retrieve",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      }
    },
    "/applications": {
      "post": {
        "tags": [
          "applications"  
        ],
        "summary": "Submit application",
        "description": "Submits a new driver",
        "operationId": "createApplication",
        "requestBody": {
          "description": "Example request body.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Username": {
                    "type": "string",
                    "example": "JohnDoe"
                  },
                  "SponsorName": {
                    "type": "string",
                    "example": "Sponsor Org."
                  },
                  "Reason": {
                    "type": "string",
                    "example": "I would like to join your sponsor organization..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "AID": {
                      "type": "string",
                      "example": "EEC8ED37-F3C0-4537-AC20-42CF9E1FD340"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User or sponsor not found"
          },
          "409": {
            "description": "User already has an applictaion for that sponsor."
          }
        }
      }
    },
    "/applications/users/{Username}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Retrieve a user's applications.",
        "description": "Retrieves the applications of a specific user given their username.",
        "operationId": "getUserApplications",
        "parameters": [
          {
            "in": "path",
            "name": "Username",
            "schema": {
              "type": "string"
            },
            "description": "Username of the user whose applications are to be retrieved.",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "example": [
                        {
                          "AID": "EEC8ED37-F3C0-4537-AC20-42CF9E1FD340",
                          "Username": "JohnDoe",
                          "SponsorName": "Example Sponsor",
                          "ApplicationDate": "2023-10-14 02:43:12.713",
                          "Application Status": "Pending",
                          "Reason": "I'd like to join your sponsor organization because..."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No applications found"
          }
        }
      },
      "delete": {
        "tags": [
          "applications"
        ],
        "summary": "Delete some or all user applications",
        "description": "Delete some or all of a user's applications.",
        "operationId": "deleteApplication",
        "requestBody": {
          "description": "Deletes the applications in the IDs array, or all applications if 'all' is true.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "IDs": {
                    "type": "array",
                    "example": [
                      "EEC8ED37-F3C0-4537-AC20-42CF9E1FD340",
                      "544F44D9-8D86-4EB8-A2C6-687519C2FD86"
                    ]
                  },
                  "all": {
                    "type": "bool",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Application not found"
          }
        }
      }
    },
    "/catalogs/:SponsorName": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "Retrieve the catalog searches for a sponsor.",
        "description": "Returns a list of preset API queries to construct the sponsor's catalog.",
        "operationId": "getSponsorCatalog",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor whose catalog is to be returned.",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searches": {
                      "type": "array",
                      "example": [
                        {
                          "CSID": "2F005544-62B3-4E95-BA6F-664CA466183C",
                          "term": "music artist name",
                          "media": "music",
                          "entity": "musicTrack",
                          "limit": 5
                        },
                        {
                          "CSID": "64C4FE0F-AC6D-4144-B2A2-5BBDBF6196B5",
                          "term": "movie name",
                          "media": "movie",
                          "entity": "movie",
                          "limit": 2
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      },
      "post": {
        "tags": [
          "catalogs"
        ],
        "summary": "Adds new search queries to a sponsor catalog.",
        "description": "Adds one or more new search queries to a sponsor's catalog.",
        "operationId": "addCatalogSearchQuery",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor.",
            "required": "true"
          }
        ],
        "requestBody": {
          "description": "The array of new queries to add.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searches": {
                    "type": "array",
                    "example": [
                      {
                        "term": "music artist name",
                        "media": "music",
                        "entity": "musicTrack",
                        "limit": 5
                      },
                      {
                        "term": "movie name",
                        "media": "movie",
                        "entity": "movie",
                        "limit": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      },
      "put": {
        "tags": [
          "catalogs"
        ],
        "summary": "Update a sponsor's catalog.",
        "description": "Updates the catalog settings of a sponsor.",
        "operationId": "updateSearchQuery",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor.",
            "required": "true"
          }
        ],
        "requestBody": {
          "description": "The updated array of search queries.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searches": {
                    "type": "array",
                    "example": [
                      {
                        "term": "music artist name",
                        "media": "music",
                        "entity": "musicTrack",
                        "limit": 5
                      },
                      {
                        "term": "movie name",
                        "media": "movie",
                        "entity": "movie",
                        "limit": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      },
      "delete": {
        "tags": [
          "catalogs"
        ],
        "summary": "Delete a search query from a sponsor's catalog.",
        "description": "Delete one or more search queries from a sponsor catalog's settings.",
        "operationId": "deleteCatalogSearchQuery",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor.",
            "required": "true"
          }
        ],
        "requestBody": {
          "description": "The list of search queries to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searches": {
                    "type": "array",
                    "example": [
                      "2F005544-62B3-4E95-BA6F-664CA466183C",
                      "8EE59120-A598-4E99-BBA8-AF5C19F3EE29"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Sponsor not found"
          }
        }
      }
    },
    "/orders/users/:Username": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create a new order for the user.",
        "description": "Adds a user's order to the database.",
        "operationId": "createOrder",
        "parameters": [
          {
            "in": "path",
            "name": "Username",
            "schema": {
              "type": "string"
            },
            "description": "Name of the user."
          }
        ],
        "requestBody": {
          "description": "The list of order items.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "example": [
                      {
                        "itemName": "Toy Story 4",
                        "itemPrice": 99,
                        "itemDescription": "Pixar Animation Studios proudly presents the adventure of a lifetime! When Woody, Buzz and the gang join Bonnie on a road trip with her new craft-project-turned-toy, Forky, the innocent little spork’s hilarious antics launch Woody on a wild quest filled with unexpected new characters—and one long-lost friend! Toy Story 4 is a soaring masterpiece stuffed with spectacular animation, humor and heart."
                      }
                    ]
                  },
                  "SponsorName": {
                    "type": "string",
                    "example": "Sponsor Org."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User or sponsor not found"
          },
          "409": {
            "description": "Not enough points"
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Retrieve the orders of a user.",
        "description": "Returns a list of a user's orders.",
        "operationId": "getUsersOrders",
        "parameters": [
          {
            "in": "path",
            "name": "Username",
            "schema": {
              "type": "string"
            },
            "description": "Name of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "example": [
                        {
                          "OID": "544F44D9-8D86-4EB8-A2C6-687519C2FD86",
                          "SID": "8EE59120-A598-4E99-BBA8-AF5C19F3EE29",
                          "SponsorName": "Test Sponsor",
                          "ShippingAddress": "100 Example Rd.",
                          "BillingAddress": "100 Example Rd.",
                          "OrderDate": "2023-10-31T00:17:08.000Z",
                          "ArrivalDate": null,
                          "items": [
                            {
                              "itemName": "Toy Story 4",
                              "itemPrice": 99,
                              "itemDescription": "Pixar Animation Studios proudly presents the adventure of a lifetime! When Woody, Buzz and the gang join Bonnie on a road trip with her new craft-project-turned-toy, Forky, the innocent little spork’s hilarious antics launch Woody on a wild quest filled with unexpected new characters—and one long-lost friend! Toy Story 4 is a soaring masterpiece stuffed with spectacular animation, humor and heart."
                            }
                          ],
                          "total": 99
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Orders not found"
          }
        }
      }
    },
    "/reports/sponsors/sales": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get all sponsor sales.",
        "description": "Returns an list of sponsor objects containing a list of that sponsor's sales.",
        "operationId": "getSponsorSales",
        "requestBody": {
          "description": "The start and end datetimes.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "StartDate": {
                    "type": "string",
                    "example": "2023-10-31T00:17:08.000Z"
                  },
                  "EndDate": {
                    "type": "string",
                    "example": "2023-10-31T00:17:08.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sponsors": {
                      "type": "array",
                      "example": [
                        {
                          "name": "Test Sponsor",
                          "sales": [
                            {
                              "OID": "544F44D9-8D86-4EB8-A2C6-687519C2FD86",
                              "SID": "8EE59120-A598-4E99-BBA8-AF5C19F3EE29",
                              "UID": "544F44D9-A598-4E99-BBA8-AF5C19F3EE29",
                              "Username": "TestDriver",
                              "SponsorName": "Test Sponsor",
                              "ShippingAddress": "100 Example Rd.",
                              "BillingAddress": "100 Example Rd.",
                              "OrderDate": "2023-10-31T00:17:08.000Z",
                              "ArrivalDate": null,
                              "items": [
                                {
                                  "itemName": "Toy Story 4",
                                  "itemPrice": 99,
                                  "itemDescription": "Pixar Animation Studios proudly presents the adventure of a lifetime! When Woody, Buzz and the gang join Bonnie on a road trip with her new craft-project-turned-toy, Forky, the innocent little spork’s hilarious antics launch Woody on a wild quest filled with unexpected new characters—and one long-lost friend! Toy Story 4 is a soaring masterpiece stuffed with spectacular animation, humor and heart."
                                }
                              ],
                              "total": 99
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/sponsors/:SponsorName/sales": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get all sponsor sales.",
        "description": "Returns a list of sales for the given sponsor.",
        "operationId": "getSponsorSalesByName",
        "parameters": [
          {
            "in": "path",
            "name": "SponsorName",
            "schema": {
              "type": "string"
            },
            "description": "Name of the sponsor."
          }
        ],
        "requestBody": {
          "description": "The start and end datetimes.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "StartDate": {
                    "type": "string",
                    "example": "2023-10-31T00:17:08.000Z"
                  },
                  "EndDate": {
                    "type": "string",
                    "example": "2023-10-31T00:17:08.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sales": {
                      "type": "array",
                      "example": [
                        {
                          "OID": "544F44D9-8D86-4EB8-A2C6-687519C2FD86",
                          "SID": "8EE59120-A598-4E99-BBA8-AF5C19F3EE29",
                          "UID": "544F44D9-A598-4E99-BBA8-AF5C19F3EE29",
                          "Username": "TestDriver",
                          "SponsorName": "Test Sponsor",
                          "ShippingAddress": "100 Example Rd.",
                          "BillingAddress": "100 Example Rd.",
                          "OrderDate": "2023-10-31T00:17:08.000Z",
                          "ArrivalDate": null,
                          "items": [
                            {
                              "itemName": "Toy Story 4",
                              "itemPrice": 99,
                              "itemDescription": "Pixar Animation Studios proudly presents the adventure of a lifetime! When Woody, Buzz and the gang join Bonnie on a road trip with her new craft-project-turned-toy, Forky, the innocent little spork’s hilarious antics launch Woody on a wild quest filled with unexpected new characters—and one long-lost friend! Toy Story 4 is a soaring masterpiece stuffed with spectacular animation, humor and heart."
                            }
                          ],
                          "total": 99
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "example": "username"
          },
          "Name": {
            "type": "string",
            "example": "John Doe"
          },
          "Role": {
            "type": "string",
            "example": "driver"
          },
          "Email": {
            "type": "string",
            "example": "example@example.com"
          }
        }
      },
      "Sponsor": {
        "type": "object",
        "properties": {
          "SID": {
            "type": "string",
            "example": "544F44D9-8D86-4EB8-A2C6-687519C2FD86"
          },
          "SponsorName": {
            "type": "string",
            "example": "Sponsor Org."
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}